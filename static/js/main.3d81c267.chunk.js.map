{"version":3,"sources":["_common/BaseCardBundle/BaseCardBundle.module.css","_services/apolloClientService.ts","_common/AppFooter/AppFooter.tsx","_common/AppHeader/AppHeader.tsx","AssetPage/AssetPage.tsx","_services/openSeaService.ts","BundlesPage/bundlesPageData.ts","_common/BaseCardBundle/BaseCardBundleMedia.tsx","_common/BaseCardBundle/BaseCardBundleThumbnails.tsx","_common/BaseCardBundle/BaseCardBundle.tsx","_common/ModalBundleItem/ModalBundleItem.tsx","BundlesPage/BundlesPage.tsx","App.tsx","index.tsx"],"names":["module","exports","httpLink","HttpLink","uri","authMiddleware","ApolloLink","operation","forward","setContext","headers","client","ApolloClient","cache","InMemoryCache","link","concat","AppFooter","className","href","AppHeader","to","pathname","AssetPage","provider","Web3","HttpProvider","seaport","OpenSeaPort","networkName","Network","Main","gql","BaseCardBundleMedia","src","isVideo","endsWith","classNames","clsx","controls","type","alt","BaseCardBundleThumbnails","assets","firstAsset","secondAsset","undefined","numAssetsMore","Math","max","length","styles","ThumbnailsContainer","ThumbnailPrimary","imageUrl","ThumbnailImg","ThumbnailSecondary","BaseCardBundle","data","name","description","slug","owner","role","Name","Description","address","ModalBundleItem","bundle","map","asset","openseaLink","target","rel","tokenId","BundlesPage","bundleSlug","useParams","useState","bundles","setData","error","setError","loading","setLoading","requestData","useCallback","a","openSeaService","api","getBundles","useEffect","useBundlesPageData","message","bundleSelected","find","index","App","exact","path","ReactDOM","render","StrictMode","apolloClientService","document","getElementById"],"mappings":"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","file":"static/js/main.3d81c267.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BaseCardBundle\":\"BaseCardBundle_BaseCardBundle__1f5Xy\",\"Name\":\"BaseCardBundle_Name__2Y7Rf\",\"Description\":\"BaseCardBundle_Description__2xhOo\",\"ThumbnailsContainer\":\"BaseCardBundle_ThumbnailsContainer__1l1pm\",\"ThumbnailPrimary\":\"BaseCardBundle_ThumbnailPrimary__2sEP6\",\"ThumbnailSecondary\":\"BaseCardBundle_ThumbnailSecondary__3mTxd\",\"ThumbnailImg\":\"BaseCardBundle_ThumbnailImg__26fT4\"};","import { HttpLink, ApolloLink, ApolloClient, InMemoryCache, concat } from '@apollo/client'\n\nconst httpLink = new HttpLink({ uri: 'https://api.opensea.io/graphql' })\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  // add the authorization to the headers\n  operation.setContext({\n    headers: {\n      // authorization: localStorage.getItem('token') || null,\n      'x-api-key': '0106d29713754b448f4513d7a66d0875',\n      'x-build-id': 'gA-1NpYxz96R_JcEek0bq',\n    },\n  })\n\n  return forward(operation)\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: concat(authMiddleware, httpLink),\n})\n\n// const client = new ApolloClient({\n//   uri: 'https://api.opensea.io/graphql',\n//   cache: new InMemoryCache(),\n// })\n\nexport default client\n","import React from 'react'\n\nexport const AppFooter = () => {\n  return (\n    <footer className=\"p-3 text-center\">\n      <p className=\"text-white\">\n        <span className=\"text-white text-opacity-70\">Created by Gevorg Harutyunyan</span>{' '}\n        [{' '}\n        <a href=\"https://github.com/modularcoder\" className=\"underline\">\n          @modularcoder\n        </a>{' '}\n        ]\n      </p>\n    </footer>\n  )\n}\n\nexport default AppFooter\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const AppHeader = () => {\n  return (\n    <header\n      className=\"\n      mb-6 p-3 w-full\n      sticky top-0\n      bg-white z-50 shadow-md\n    \"\n    >\n      <div className=\"container mx-auto\">\n        <Link to={{ pathname: '/' }}>\n          <h1 className=\"text-xl font-semibold mb-2 text-shadow text-light-blue-300\">\n            OpenSea.io surfer\n          </h1>\n        </Link>\n      </div>\n    </header>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\n\nexport const AssetPage = () => {\n  return <div>@ToDo: Single Asset Page</div>\n}\n\nexport default AssetPage\n","import * as Web3 from 'web3'\nimport { OpenSeaPort, Network } from 'opensea-js'\n\n// This example provider won't let you make transactions, only read-only calls:\nconst provider = new Web3.providers.HttpProvider('https://mainnet.infura.io')\n\nconst seaport = new OpenSeaPort(provider, {\n  networkName: Network.Main,\n})\n\nexport default seaport\n","import { useQuery, gql } from '@apollo/client'\nimport { useState, useEffect, useCallback } from 'react'\nimport openSeaService from '../_services/openSeaService'\n\nimport { OpenSeaAssetBundle } from 'opensea-js/lib/types'\n// import { Category } from '../_types'\n\nexport interface IMainPageData {\n  bundles: OpenSeaAssetBundle[]\n}\n\nexport interface IMainPage {\n  data: IMainPageData\n  error: Error | null\n  loading: Boolean\n}\n\nexport const useBundlesPageData = (): IMainPage => {\n  const [data, setData] = useState<IMainPageData>({ bundles: [] })\n  const [error, setError] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  const requestData = useCallback(async () => {\n    setError(null)\n    setLoading(true)\n\n    try {\n      const { bundles } = await openSeaService.api.getBundles()\n\n      setData({ bundles })\n    } catch (err) {\n      setError(err)\n    }\n\n    setLoading(false)\n  }, [])\n\n  useEffect(() => {\n    requestData()\n  }, [requestData])\n\n  return { error, data, loading }\n}\n\n// Try with apollo\n// Unfortunately the server redirects\n\nconst CATEGORIES = gql`\n  query {\n    categories {\n      id\n      imageUrl\n      name\n      slug\n      description\n      shortDescription\n    }\n  }\n`\n\nexport const useMainPageDataFromGraphQL = () => {\n  const { loading, error, data } = useQuery(CATEGORIES)\n\n  return { loading, error, data }\n}\n","import clsx from 'clsx'\nimport React from 'react'\n\nexport interface BaseCardBundleMediaProps {\n  className?: string\n  src: string\n}\n\nexport const BaseCardBundleMedia: React.FC<BaseCardBundleMediaProps> = ({\n  className,\n  src,\n}) => {\n  const isVideo = src && src.endsWith('.mp4')\n  const classNames = clsx(\n    className,\n    'absolute inset-0 w-full h-full object-cover rounded',\n  )\n\n  return (\n    <>\n      {isVideo && (\n        <video controls className={classNames}>\n          <source src={src} type=\"video/mp4\"></source>\n        </video>\n      )}\n      {!isVideo && <img src={src} alt=\"\" className={classNames} />}\n    </>\n  )\n}\n\nexport default BaseCardBundleMedia\n","import clsx from 'clsx'\nimport React from 'react'\nimport styles from './BaseCardBundle.module.css'\nimport { OpenSeaAsset } from 'opensea-js/lib/types'\n\nimport BaseCardBundleMedia from './BaseCardBundleMedia'\n\nexport interface BaseCardBundleThumbnailsProps {\n  assets: OpenSeaAsset[]\n}\n\nexport const BaseCardBundleThumbnails: React.FC<BaseCardBundleThumbnailsProps> = ({\n  assets,\n}) => {\n  const firstAsset = assets[0]\n  const secondAsset = assets[1] || undefined\n  const numAssetsMore = Math.max(assets.length - 1, 0)\n\n  return (\n    <div\n      className={clsx(styles.ThumbnailsContainer, 'flex-none lg:w-40 xl:w-48 relative')}\n    >\n      <div\n        className={clsx(\n          styles.ThumbnailPrimary,\n          `\n        h-40 md:h-32 lg:w-40 xl:w-48\n        bg-white shadow-md overflow-hidden rounded relative z-20\n      `,\n        )}\n      >\n        <BaseCardBundleMedia src={firstAsset.imageUrl} className={styles.ThumbnailImg} />\n      </div>\n      <div\n        className={clsx(\n          styles.ThumbnailSecondary,\n          `\n        lg:w-40 xl:w-48 h-32\n        bg-white shadow-md overflow-hidden rounded absolute top-0 z-0`,\n        )}\n      >\n        {numAssetsMore && (\n          <>\n            <div\n              className=\"\n                absolute right-0 bottom-0 transform translate-x-1/2 translate-y-1/2\n                p-10\n                rounded-full\n              bg-gray-900 text-white\n                whitespace-nowrap\n                opacity-80\n                z-10\n              \"\n            ></div>\n            <span className=\"absolute right-2 bottom-2 text-xs z-20 font-semibold\">\n              +{numAssetsMore}\n            </span>\n          </>\n        )}\n        <BaseCardBundleMedia src={secondAsset.imageUrl} className={styles.ThumbnailImg} />\n      </div>\n    </div>\n  )\n}\n\nexport default BaseCardBundleThumbnails\n","import clsx from 'clsx'\nimport React from 'react'\nimport { OpenSeaAssetBundle } from 'opensea-js/lib/types'\nimport styles from './BaseCardBundle.module.css'\n\nimport { Link } from 'react-router-dom'\nimport BaseCardBundleThumbnails from './BaseCardBundleThumbnails'\n\nexport interface BaseCardBundleProps {\n  data: OpenSeaAssetBundle\n}\n\nexport const BaseCardBundle: React.FC<BaseCardBundleProps> = ({ data }) => {\n  const { name, description, assets, slug } = data\n  const firstAsset = assets[0]\n  const { owner } = firstAsset\n\n  return (\n    <div\n      className={clsx(\n        styles.BaseCardBundle,\n        'flex flex-col bg-white text-left w-full h-full rounded-lg shadow-lg mb-8',\n      )}\n      role=\"listitem\"\n    >\n      {/* Content */}\n      <div className=\"p-4 flex flex-1 flex-col lg:flex-row\">\n        {/* Thumbnails */}\n        <Link\n          to={{\n            pathname: `/bundles/${slug}`,\n          }}\n        >\n          <BaseCardBundleThumbnails assets={assets} />\n        </Link>\n        {/* Body */}\n        <div className=\"flex-auto p-6\">\n          <div className=\"flex flex-wrap\">\n            <h3\n              className={clsx(\n                styles.Name,\n                'mb-4 h-14 flex-auto text-lg text-indigo-600 font-semibold break-all',\n              )}\n            >\n              {name}\n            </h3>\n          </div>\n          <p\n            className={clsx(\n              styles.Description,\n              'text-sm text-gray-500 break-all overflow-ellipsis',\n            )}\n          >\n            {description}\n          </p>\n        </div>\n      </div>\n      {/* Footer */}\n      <div\n        className=\"\n          flex flex-grow-0 p-4\n          flex-row\n          justify-between\n          rounded-b-lg\n          bg-gray-600\n        \"\n      >\n        <div className=\"text-white text-opacity-70 text-xs\">Assets: {assets.length}</div>\n        <div className=\"text-white text-opacity-70 text-xs hidden lg:block\">\n          Owner: {owner.address}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { OpenSeaAssetBundle } from 'opensea-js/lib/types'\n\nimport { Link } from 'react-router-dom'\n\nexport interface ModalBundleItemProps {\n  bundle: OpenSeaAssetBundle\n}\n\nexport const ModalBundleItem: React.FC<ModalBundleItemProps> = ({ bundle }) => {\n  const { name, description, assets } = bundle\n\n  return (\n    <div\n      className=\"\n       bg-black bg-opacity-70\n        fixed w-full h-full top-0 left-0 z-50 overflow-y-auto p-10 md:p-32\n        flex flex-col justify-start\n        backdrop-filter backdrop-blur-md\n      \"\n    >\n      <div className=\"container mx-auto p-8 bg-white shadow-xl rounded relative z-10 text-gray-700\">\n        <h1 className=\"text-3xl mb-10\">{name}</h1>\n\n        <p className=\"mb-10\">{description}</p>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\" role=\"list\">\n          {assets.map((asset) => {\n            return (\n              <a\n                href={asset.openseaLink}\n                target=\"_blank\"\n                key={asset.tokenId}\n                rel=\"noreferrer\"\n              >\n                <div\n                  className=\"\n                  bg-white\n                    rounded w-full\n                    shadow\n                    overflow-x-hidden\n                    p-2\n                    transform\n                    scale-100\n                    grayscale\n                    hover:grayscale-0\n                    hover:scale-110\n                    transition-all\n                  \"\n                >\n                  <img\n                    src={asset.imageUrl}\n                    alt={asset.name}\n                    className=\"object-cover h-48 w-full\"\n                  />\n                </div>\n              </a>\n            )\n          })}\n        </div>\n      </div>\n      <Link\n        to={{\n          pathname: `/`,\n        }}\n        className=\"cursor-default\"\n      >\n        <div className=\"absolute top-0 left-0 w-full z-0 h-full\"></div>\n      </Link>\n    </div>\n  )\n}\n\nexport default ModalBundleItem\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useBundlesPageData } from './bundlesPageData'\n\nimport { BaseCardBundle } from '../_common/BaseCardBundle/BaseCardBundle'\nimport { ModalBundleItem } from '../_common/ModalBundleItem/ModalBundleItem'\n\ninterface IRouteParams {\n  bundleSlug: string\n}\n\nexport const BundlesPage = () => {\n  const { bundleSlug } = useParams<IRouteParams>()\n  const { loading, error, data } = useBundlesPageData()\n\n  if (loading) return <p>Loading bundles...</p>\n  if (error) return <p role=\"alert\">Error :( ({error.message})</p>\n\n  const { bundles } = data\n  const bundleSelected = bundleSlug\n    ? bundles.find((bundle) => bundle.slug === bundleSlug) || null\n    : null\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\" role=\"list\">\n        {data.bundles.map((bundle, index) => {\n          return (\n            <div key={index} className=\"pb-4\">\n              <BaseCardBundle data={bundle} />\n            </div>\n          )\n        })}\n      </div>\n\n      {bundleSelected && <ModalBundleItem bundle={bundleSelected} />}\n    </div>\n  )\n}\n\nexport default BundlesPage\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport AppFooter from './_common/AppFooter/AppFooter'\nimport AppHeader from './_common/AppHeader/AppHeader'\n\nimport AssetPage from './AssetPage/AssetPage'\n// import BundlePage from './BundlePage/BundlePage'\nimport BundlesPage from './BundlesPage/BundlesPage'\n\nexport const App = () => {\n  return (\n    <Router>\n      <div\n        className=\"\n          App min-h-screen w-full relative flex flex-col\n          text-white\n        \"\n      >\n        <AppHeader />\n        <div className=\"container mx-auto flex flex-col flex-1 p-8 justify-center items-center \">\n          <Switch>\n            <Route exact path=\"/\">\n              <BundlesPage />\n            </Route>\n            <Route path=\"/bundles/:bundleSlug\">\n              <BundlesPage />\n            </Route>\n            <Route path=\"/assets/:assetId\">\n              <AssetPage />\n            </Route>\n          </Switch>\n        </div>\n        <AppFooter />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from '@apollo/client/react'\nimport apolloClientService from './_services/apolloClientService'\n\n// Styles\nimport './index.css'\n\n// App component\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={apolloClientService}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}